{"ast":null,"code":"import _regeneratorRuntime from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.getDataFromDb =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body, names, days, hrs;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/restaurants');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              _this.setState({\n                data: body\n              });\n\n              names = Array.from(body).map(function (names) {\n                return names.Name;\n              });\n              days = Array.from(body).map(function (days) {\n                return days.Days;\n              });\n              hrs = Array.from(body).map(function (hrs) {\n                return hrs.Hours;\n              });\n\n              _this.setState({\n                restaurantNames: names,\n                isLoading: false,\n                Days: days\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.componentDidMount = _this.componentDidMount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getDataFromDb = _this.getDataFromDb.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.render = _this.render.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      restaurants: [],\n      selectedRestaurant: '',\n      isLoading: false,\n      data: [],\n      restaurantNames: [],\n      detailsOpen: false,\n      restaurantReviews: [],\n      restaurantRating: '',\n      restaurantMood: '',\n      restaurantCity: '',\n      restaurantState: '',\n      detailsHidden: true,\n      restaurantId: '',\n      Days: []\n    };\n    return _this;\n  } //function to contain the fetch\n\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //sets isLoading to true if we want to display some graphics during loading\n      this.setState({\n        isLoading: true\n      }); //fetch pulls all restaurant data into an array\n\n      this.getDataFromDb();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //populates the select\n      var options = this.state.restaurantNames ? this.state.restaurantNames.map(function (name) {\n        return React.createElement(\"option\", {\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, name);\n      }) : ''; //populates the select\n      //populates the reviews\n      //variables to hold the state to display\n\n      var selectedName = this.state.selectedRestaurant;\n      var selectedMood = this.state.restaurantMood;\n      var selectedRating = this.state.restaurantRating;\n      var selectedCity = this.state.restaurantCity;\n      var selectedState = this.state.restaurantState;\n      var detailsHidden = this.state.detailsHidden;\n      var detailsOpen = this.state.detailsOpen;\n      var selectedId = this.state.restaurantId;\n      var lcldata = this.state.data;\n      var cards = this.state.data.map(function (card) {\n        var DaysOfWeek = card.Days.map(function (day) {\n          switch (day) {\n            case \"M\":\n              return React.createElement(\"span\", {\n                className: \"numberCircle\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80\n                },\n                __self: this\n              }, \" M \");\n\n            case \"T\":\n              return React.createElement(\"span\", {\n                className: \"numberCircle\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82\n                },\n                __self: this\n              }, \" T \");\n\n            case \"W\":\n              return React.createElement(\"span\", {\n                className: \"numberCircle\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84\n                },\n                __self: this\n              }, \" W \");\n\n            case \"R\":\n              return React.createElement(\"span\", {\n                className: \"numberCircle\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 86\n                },\n                __self: this\n              }, \" Th \");\n\n            case \"F\":\n              return React.createElement(\"span\", {\n                className: \"numberCircle\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88\n                },\n                __self: this\n              }, \" F \");\n\n            case \"Sa\":\n              return React.createElement(\"span\", {\n                className: \"numberCircle\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 90\n                },\n                __self: this\n              }, \" Sa \");\n\n            case \"S\":\n              return React.createElement(\"span\", {\n                className: \"numberCircle\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92\n                },\n                __self: this\n              }, \" S \");\n\n            default:\n              return \"\";\n          }\n        });\n        var restLink = '/restaurant/' + card.id;\n        var openAt = moment(card.Hours[0], 'HH:mm').format('h:mm A');\n        var closeAt = moment(card.Hours[1], 'HH:mm').format('h:mm A');\n        return React.createElement(\"div\", {\n          class: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"card-header\",\n          style: {\n            color: 'black'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, card.Name), React.createElement(\"div\", {\n          class: \"card-body\",\n          style: {\n            maxwidth: '25rem',\n            color: 'black'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, card.Type), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, card.Mood), React.createElement(\"i\", {\n          class: \"em em-peach\",\n          title: \"Peachy Rating\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), card.Rating, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: restLink,\n          class: \"btn btn-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Favorite!\")), card.Bar, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"caption\",\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, DaysOfWeek)), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \" \", openAt, \" to \", closeAt, \" \")));\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"restaurant-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"restaurant-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" Welcome to Peachy Keen!\"), React.createElement(\"div\", {\n        class: \"card-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, cards))))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Main.js"],"names":["React","Component","moment","Main","props","getDataFromDb","fetch","response","json","body","setState","data","names","Array","from","map","Name","days","Days","hrs","Hours","restaurantNames","isLoading","componentDidMount","bind","render","state","restaurants","selectedRestaurant","detailsOpen","restaurantReviews","restaurantRating","restaurantMood","restaurantCity","restaurantState","detailsHidden","restaurantId","options","name","selectedName","selectedMood","selectedRating","selectedCity","selectedState","selectedId","lcldata","cards","card","DaysOfWeek","day","restLink","id","openAt","format","closeAt","color","maxwidth","Type","Mood","Rating","Bar","width","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nclass Main extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t\tthis.getDataFromDb = this.getDataFromDb.bind(this);\n\t\tthis.render = this.render.bind(this);\n\t\tthis.state = {\n\t\t\trestaurants: [],\n\t\t\tselectedRestaurant: '',\n\t\t\tisLoading: false,\n\t\t\tdata: [],\n\t\t\trestaurantNames: [],\n\t\t\tdetailsOpen: false,\n\t\t\trestaurantReviews:[],\n\t\t\trestaurantRating:'',\n\t\t\trestaurantMood:'',\n\t\t\trestaurantCity: '',\n\t\t\trestaurantState:'',\n\t\t\tdetailsHidden:true,\n\t\t\trestaurantId:'',\n\t\t\tDays: []\n\t\t};\n\t}\n\n\t//function to contain the fetch\n\tcomponentDidMount() {\n\t\t//sets isLoading to true if we want to display some graphics during loading\n\t\tthis.setState({ isLoading: true});\n\t\t//fetch pulls all restaurant data into an array\n\t\tthis.getDataFromDb();\n\t}\n\n\tgetDataFromDb = async () => {\n\t\tconst response = await fetch('/restaurants');\n\t\tconst body = await response.json();\n\t\tthis.setState({data: body});\n\t\tvar names = Array.from(body).map(names => names.Name);\n\t\tvar days = Array.from(body).map(days=>days.Days)\n\t\tvar hrs = Array.from(body).map(hrs=>hrs.Hours)\n\t\tthis.setState({\n\t\t\trestaurantNames: names,\n\t\t\t  isLoading: false,\n\t\t\t\tDays: days});\n\n\t};\n\n\trender() {\n\t\t//populates the select\n\t\tvar options = this.state.restaurantNames?\n\t\tthis.state.restaurantNames.map(function(name){\n\t\t\treturn <option value={name}>{name}</option>\n\t\t})\n\t\t: '';\n\n\t\t//populates the select\n\n\n\t\t//populates the reviews\n\n\t\t//variables to hold the state to display\n\n\t\tvar selectedName = this.state.selectedRestaurant;\n\t\tvar selectedMood = this.state.restaurantMood;\n\t\tvar selectedRating = this.state.restaurantRating;\n\t\tvar selectedCity = this.state.restaurantCity;\n\t\tvar selectedState = this.state.restaurantState;\n\t\tvar detailsHidden = this.state.detailsHidden;\n\t\tvar detailsOpen = this.state.detailsOpen;\n\t\tvar selectedId = this.state.restaurantId;\n\t\tvar lcldata = this.state.data;\n\n\n\t\tconst cards = this.state.data.map(function(card){\n\t\t\tvar DaysOfWeek = card.Days.map(function(day){\n\t\t\t\t\t\tswitch(day) {\n\t\t\t\t\t\t\tcase \"M\":\n\t\t\t\t\t\t\treturn <span className=\"numberCircle\"> M </span>\n\t\t\t\t\t\t\tcase \"T\":\n\t\t\t\t\t\t\treturn <span className=\"numberCircle\"> T </span>\n\t\t\t\t\t\t\tcase \"W\":\n\t\t\t\t\t\t\treturn <span className=\"numberCircle\"> W </span>\n\t\t\t\t\t\t\tcase \"R\":\n\t\t\t\t\t\t\treturn <span className=\"numberCircle\"> Th </span>\n\t\t\t\t\t\t\tcase \"F\":\n\t\t\t\t\t\t\treturn <span className=\"numberCircle\"> F </span>\n\t\t\t\t\t\t\tcase \"Sa\":\n\t\t\t\t\t\t\treturn <span className=\"numberCircle\"> Sa </span>\n\t\t\t\t\t\t\tcase \"S\":\n\t\t\t\t\t\t\treturn <span className=\"numberCircle\"> S </span>\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\tvar restLink = '/restaurant/'+card.id;\n\t\t\tvar openAt = moment(card.Hours[0], 'HH:mm').format('h:mm A');\n\t\t\tvar closeAt = moment(card.Hours[1], 'HH:mm').format('h:mm A');\n\t\t\treturn (\n\t\t\t<div class=\"card\">\n\t\t\t<div class=\"card-header\" style={{color: 'black'}}>\n    \t{card.Name}\n  \t\t</div>\n\t <div class = 'card-body' style={{maxwidth: '25rem', color: 'black'}}>\n\t <h5>{card.Type}</h5>\n\t <h5>{card.Mood}</h5>\n\t \t<i class= \"em em-peach\" title ='Peachy Rating'></i>{card.Rating}\n\t\t<div>\n\t\t<a href={restLink} class=\"btn btn-primary\">Favorite!</a>\n\t </div>\n\t {card.Bar}\n\t <div><span className='caption' style={{width:'100%'}}>{DaysOfWeek}</span></div>\n\t <span> {openAt} to {closeAt} </span>\n\t </div>\n\t </div>)\n });\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t<div class = \"App\">\n\t\t\t<div class= \"container\">\n\t\t\t<div class=\"restaurant-content\">\n\t\t\t<form style = {{width:'100%', textAlign: 'center'}}>\n\t\t\t<h1 class=\"restaurant-header\"> Welcome to Peachy Keen!</h1>\n\t\t\t<div class=\"card-columns\">\n\t\t\t{cards}\n\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}