{"ast":null,"code":"import _regeneratorRuntime from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/satdey/Documents/peachykeen/peachykeen/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport LoaderButton from \"./LoaderButton\";\nimport logo from './img/Peach-Logo.png';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.getDataFromDb =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body, names, days, hrs, mood;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/restaurants');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              _this.setState({\n                data: body\n              });\n\n              names = Array.from(body).map(function (names) {\n                return names.Name;\n              });\n              days = Array.from(body).map(function (days) {\n                return days.Days;\n              });\n              hrs = Array.from(body).map(function (hrs) {\n                return hrs.Hours;\n              });\n              mood = Array.from(body).map(function (mood) {\n                return mood.Mood;\n              });\n              mood = Array.from(new Set(mood));\n\n              _this.setState({\n                restaurantNames: names,\n                isLoading: false,\n                Days: days,\n                Moods: mood\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleChange =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.setState({\n                  selectedMood: e.target.value\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.componentDidMount = _this.componentDidMount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getDataFromDb = _this.getDataFromDb.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.render = _this.render.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      restaurants: [],\n      selectedRestaurant: '',\n      isLoading: false,\n      data: [],\n      restaurantNames: [],\n      detailsOpen: false,\n      restaurantReviews: [],\n      restaurantRating: '',\n      restaurantMood: '',\n      restaurantCity: '',\n      restaurantState: '',\n      detailsHidden: true,\n      restaurantId: '',\n      Days: [],\n      Moods: [],\n      selectedMood: ''\n    };\n    return _this;\n  } //function to contain the fetch\n\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //sets isLoading to true if we want to display some graphics during loading\n      this.setState({\n        isLoading: true\n      }); //fetch pulls all restaurant data into an array\n\n      this.getDataFromDb();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //populates the select\n      var options = this.state.restaurantNames ? this.state.restaurantNames.map(function (name, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, name);\n      }) : '';\n      var cards = this.state.data ? this.state.data.map(function (card) {\n        if (this.state.selectedMood === \"-1\" || this.state.selectedMood === card.Mood) {\n          var DaysOfWeek = card.Days.map(function (day) {\n            switch (day) {\n              case \"M\":\n                return React.createElement(\"span\", {\n                  className: \"numberCircle\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 75\n                  },\n                  __self: this\n                }, \" M \");\n\n              case \"T\":\n                return React.createElement(\"span\", {\n                  className: \"numberCircle\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 77\n                  },\n                  __self: this\n                }, \" T \");\n\n              case \"W\":\n                return React.createElement(\"span\", {\n                  className: \"numberCircle\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 79\n                  },\n                  __self: this\n                }, \" W \");\n\n              case \"R\":\n                return React.createElement(\"span\", {\n                  className: \"numberCircle\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 81\n                  },\n                  __self: this\n                }, \" Th \");\n\n              case \"F\":\n                return React.createElement(\"span\", {\n                  className: \"numberCircle\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 83\n                  },\n                  __self: this\n                }, \" F \");\n\n              case \"Sa\":\n                return React.createElement(\"span\", {\n                  className: \"numberCircle\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 85\n                  },\n                  __self: this\n                }, \" Sa \");\n\n              case \"S\":\n                return React.createElement(\"span\", {\n                  className: \"numberCircle\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 87\n                  },\n                  __self: this\n                }, \" S \");\n\n              default:\n                return \"\";\n            }\n          });\n          var restLink = '/restaurant/' + card.id;\n          var openAt = moment(card.Hours[0], 'HH:mm').format('h:mm A');\n          var closeAt = moment(card.Hours[1], 'HH:mm').format('h:mm A');\n          return React.createElement(\"div\", {\n            className: \"col-lg-4 col-md-6 col-sm-12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body\",\n            style: {\n              color: 'black'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: restLink,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \" \", React.createElement(\"span\", {\n            class: \"customH4 card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, card.Name), \" \"), React.createElement(\"h6\", {\n            class: \"card-subtitle text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"em em-peach\",\n            title: \"Peachy Rating\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }), card.Rating)), card.Images && card.Images.length > 0 ? React.createElement(\"a\", {\n            href: restLink,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            class: \"img-fluid\",\n            src: \"data:image/jpeg;base64,\" + card.Images[0].image,\n            alt: card.Name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          })) : null, React.createElement(\"div\", {\n            className: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            class: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            class: \"fas fa-grin-hearts\",\n            title: \"Mood\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }), \"  \", card.Mood, React.createElement(\"i\", {\n            class: \"fas fa-utensils\",\n            title: \"Restaurant Type\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }), \"    \", card.Type), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"caption\",\n            style: {\n              width: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, DaysOfWeek)), React.createElement(\"span\", {\n            className: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \" \", openAt, \" to \", closeAt, \" \"), React.createElement(\"div\", {\n            className: \"rightSide\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: restLink,\n            className: \"btnHeart\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            class: \"fas fa-heart\",\n            tite: \"favorite\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          })))))));\n        }\n      }) : null;\n      var LoadButton = React.createElement(LoaderButton, {\n        block: \"true\",\n        bssize: \"large\",\n        type: \"submit\",\n        isLoading: this.state.isLoading,\n        text: \"Login\",\n        loadingText: \"Data Loading\",\n        id: \"DataLoad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n      var MoodOptions = React.createElement(\"div\", {\n        className: \"col-3\",\n        id: \"mooddrop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedMood,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Anything!\"), this.state.Moods.map(function (mood) {\n        return React.createElement(\"option\", {\n          key: mood,\n          value: mood,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, mood);\n      })));\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"restaurant-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"restaurant-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"image_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"Peaches Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \" Welcome to Peachy Keen!\")), React.createElement(\"div\", {\n        className: \"restaurant-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \" What are you in the mood for? \"), MoodOptions), React.createElement(\"div\", {\n        className: \"row match-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.isLoading ? LoadButton : cards))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/satdey/Documents/peachykeen/peachykeen/client/src/components/Main.js"],"names":["React","Component","moment","LoaderButton","logo","Main","props","getDataFromDb","fetch","response","json","body","setState","data","names","Array","from","map","Name","days","Days","hrs","Hours","mood","Mood","Set","restaurantNames","isLoading","Moods","handleChange","e","selectedMood","target","value","componentDidMount","bind","render","state","restaurants","selectedRestaurant","detailsOpen","restaurantReviews","restaurantRating","restaurantMood","restaurantCity","restaurantState","detailsHidden","restaurantId","options","name","index","cards","card","DaysOfWeek","day","restLink","id","openAt","format","closeAt","color","Rating","Images","length","image","Type","width","LoadButton","MoodOptions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport LoaderButton from \"./LoaderButton\";\nimport logo from './img/Peach-Logo.png';\n\nclass Main extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t\tthis.getDataFromDb = this.getDataFromDb.bind(this);\n\t\tthis.render = this.render.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.state = {\n\t\t\trestaurants: [],\n\t\t\tselectedRestaurant: '',\n\t\t\tisLoading: false,\n\t\t\tdata: [],\n\t\t\trestaurantNames: [],\n\t\t\tdetailsOpen: false,\n\t\t\trestaurantReviews:[],\n\t\t\trestaurantRating:'',\n\t\t\trestaurantMood:'',\n\t\t\trestaurantCity: '',\n\t\t\trestaurantState:'',\n\t\t\tdetailsHidden:true,\n\t\t\trestaurantId:'',\n\t\t\tDays: [],\n\t\t\tMoods:[],\n\t\t\tselectedMood: ''\n\t\t};\n\t}\n\n\t//function to contain the fetch\n\tcomponentDidMount() {\n\t\t//sets isLoading to true if we want to display some graphics during loading\n\t\tthis.setState({ isLoading: true});\n\t\t//fetch pulls all restaurant data into an array\n\t\tthis.getDataFromDb();\n\t}\n\n\tgetDataFromDb = async () => {\n\t\tconst response = await fetch('/restaurants');\n\t\tconst body = await response.json();\n\t\tthis.setState({data: body});\n\t\tvar names = Array.from(body).map(names => names.Name);\n\t\tvar days = Array.from(body).map(days=>days.Days);\n\t\tvar hrs = Array.from(body).map(hrs=>hrs.Hours);\n\t\tvar mood = Array.from(body).map(mood=>mood.Mood);\n\t\tmood = Array.from(new Set(mood));\n\t\tthis.setState({\n\t\t\trestaurantNames: names,\n\t\t\tisLoading: false,\n\t\t\tDays: days,\n\t\t\tMoods: mood\n\t\t});\n\t};\n\n\thandleChange = async (e) =>{\n    await this.setState({selectedMood: e.target.value});\n  }\n\n\trender() {\n\t\t//populates the select\n\t\tvar options = this.state.restaurantNames?\n\t\tthis.state.restaurantNames.map(function(name, index){\n\t\t\treturn <option key={index} value={name}>{name}</option>\n\t\t})\n\t\t: '';\n\t\tconst cards = this.state.data ? this.state.data.map(function(card){\n\t\t\tif (this.state.selectedMood===\"-1\" || this.state.selectedMood === card.Mood){\n\t\t\tvar DaysOfWeek = card.Days.map(function(day){\n\t\t\t\tswitch(day) {\n\t\t\t\t\tcase \"M\":\n\t\t\t\t\treturn <span className=\"numberCircle\"> M </span>\n\t\t\t\t\tcase \"T\":\n\t\t\t\t\treturn <span className=\"numberCircle\"> T </span>\n\t\t\t\t\tcase \"W\":\n\t\t\t\t\treturn <span className=\"numberCircle\"> W </span>\n\t\t\t\t\tcase \"R\":\n\t\t\t\t\treturn <span className=\"numberCircle\"> Th </span>\n\t\t\t\t\tcase \"F\":\n\t\t\t\t\treturn <span className=\"numberCircle\"> F </span>\n\t\t\t\t\tcase \"Sa\":\n\t\t\t\t\treturn <span className=\"numberCircle\"> Sa </span>\n\t\t\t\t\tcase \"S\":\n\t\t\t\t\treturn <span className=\"numberCircle\"> S </span>\n\t\t\t\t\tdefault:\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar restLink = '/restaurant/'+card.id;\n\t\t\tvar openAt = moment(card.Hours[0], 'HH:mm').format('h:mm A');\n\t\t\tvar closeAt = moment(card.Hours[1], 'HH:mm').format('h:mm A');\n\t\t\treturn (\n\t\t\t\t<div className=\"col-lg-4 col-md-6 col-sm-12\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"card-content\">\n\t\t\t\t<div className=\"card-body\" style={{color: 'black'}}>\n\t\t\t\t<a href={restLink}> <span class=\"customH4 card-title\">{card.Name}</span> </a>\n\t\t\t\t<h6 class=\"card-subtitle text-muted\"><i className= \"em em-peach\" title ='Peachy Rating'></i>{card.Rating}</h6>\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\tcard.Images && card.Images.length > 0 ?\n\t\t\t\t \t<a href={restLink}><img class=\"img-fluid\" src={\"data:image/jpeg;base64,\"+card.Images[0].image} alt={card.Name}/></a>\n\t\t\t\t\t: null\n\t\t\t  }\n\t\t\t\t<div className = 'card-body'>\n\t\t\t\t<p class=\"card-text\">\n\t\t\t\t<i class=\"fas fa-grin-hearts\" title=\"Mood\"></i>  {card.Mood}\n\t\t\t\t<i class=\"fas fa-utensils\" title=\"Restaurant Type\"></i>    {card.Type}\n\t\t\t\t</p>\n\t\t\t\t<div>\n\t\t\t\t<span className='caption' style={{width:'100%'}}>{DaysOfWeek}</span>\n\t\t\t\t</div>\n\t\t\t\t<span className=\"card-text\"> {openAt} to {closeAt} </span>\n\t\t\t\t<div className = \"rightSide\">\n\t\t\t\t<a href={restLink} className=\"btnHeart\"><i class=\"fas fa-heart\" tite=\"favorite\"></i></a>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}}):null;\n\n\t\t\tvar LoadButton = <LoaderButton\n\t\t\tblock = \"true\"\n\t\t\tbssize=\"large\"\n\t\t\ttype=\"submit\"\n\t\t\tisLoading={this.state.isLoading}\n\t\t\ttext=\"Login\"\n\t\t\tloadingText=\"Data Loading\"\n\t\t\tid = \"DataLoad\"\n\t\t\t/>\n\n\t\t\tvar MoodOptions = <div className=\"col-3\" id=\"mooddrop\">\n\t\t\t<select className = \"form-control\" value={this.state.selectedMood} onChange={this.handleChange}>\n\t\t\t<option value=\"-1\">Anything!</option>\n\t\t\t{\n\t\t\t\tthis.state.Moods.map(mood => {\n\t\t\t\t\treturn <option key={mood} value={mood}>{mood}</option>\n\t\t\t\t})\n\t\t\t}\n\t\t\t</select>\n\t\t\t</div>\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t<div className = \"App\">\n\t\t\t\t<div className=\"restaurant-content\">\n\t\t\t\t<div className=\"restaurant-header\">\n\t\t\t\t<div id = \"image_div\">\n\t\t\t\t<img src={logo} alt=\"Peaches Logo\" />\n\t\t\t\t</div>\n\t\t\t\t<h1> Welcome to Peachy Keen!</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"restaurant-header\">\n\t\t\t\t<p> What are you in the mood for? </p>\n\t\t\t\t{MoodOptions}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row match-height\">\n\t\t\t\t{this.state.isLoading ? LoadButton : cards}\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t}\n\n\texport default Main;\n"]},"metadata":{},"sourceType":"module"}